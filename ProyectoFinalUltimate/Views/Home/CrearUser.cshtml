@model ProyectoFinalUltimate.Models.User
@{
    ViewBag.Title = "Crear Usuario";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

@using (Html.BeginForm("CrearUser", "Home", FormMethod.Post, new { id = "formulario" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TipoUser, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control", type = "email", required = "required" } })
                @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
            </div>
            <div style="color:red;">@ViewBag.CorreoValid</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoProveedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TipoProveedor, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoProveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContraCorreo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContraCorreo, new { htmlAttributes = new { @class = "form-control", required = "required", type="password" } })
                @Html.ValidationMessageFor(model => model.ContraCorreo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContraApp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContraApp, new { htmlAttributes = new { @class = "form-control", required = "required",  type="password" } })
                @Html.ValidationMessageFor(model => model.ContraApp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jquery")


    <script type="text/javascript">
        $(document).ready(function () {
            $('#formulario').each(function () {
                this.reset();
            });
        });

        $("#formulario").submit(function () {
            var email = $("#CorreoElectronico").val();
            var email_analizado = /^([^]+)@@(\w+).(\w+)$/.exec(email);
            var [, nombre, servidor, dominio] = email_analizado;

            var select = $("#TipoProveedor option:selected").text();
            
            if (servidor == select.toLowerCase()) {
                alert("Su proveedor ha sido validado");
            } else {
                alert("El correo no coincide con el porvedor");
                return false;
            }
        });

    </script>

    @Scripts.Render("//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("/scripts/jquery.min.js");
    @Scripts.Render("/scripts/alertprefa.js");
}
<div>
    @Html.ActionLink("Back to List", "UserList")
</div>
